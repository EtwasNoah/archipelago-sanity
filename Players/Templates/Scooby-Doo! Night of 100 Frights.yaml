# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Player{number}

# Used to describe your yaml. Useful if you have multiple files.
description: Default Scooby-Doo! Night of 100 Frights Template

game: Scooby-Doo! Night of 100 Frights
requires:
  version: 0.6.2 # Version of Archipelago required for this yaml to work as expected.

Scooby-Doo! Night of 100 Frights:
  # Game Options
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # **Full:** ensure everything can be reached and acquired.
    # 
    # **Minimal:** ensure what is needed to reach your goal can be acquired.
    full: 50
    minimal: 0

  plando_items:
    # Generic items plando.
    []

  include_monster_tokens:
    # Include Monster Tokens as AP Locations/Items
    'false': 0
    'true': 50

  include_keys:
    # Include Keys as AP Locations/Items
    vanilla: 50
    keys: 0
    keyrings: 0

  include_warpgates:
    # Include Warp Gates as AP Locations/Items
    # Additionally, to offset issues with snack gates, you will start with 400 Scooby Snacks
    'false': 50
    'true': 0

  include_snacks:
    # Include Snacks as AP Locations/Items
    'false': 50
    'true': 0

  death_link:
    # When you die, everyone who enabled death link dies. Of course, the reverse is true too.
    'false': 50
    'true': 0

  completion_goal:
    # Select which completion goal you want for this world:
    # 0 = Vanilla/Beat Mastermind
    # 1 = Bosses
    # 2 = Monster Tokens
    # 3 = Bosses/Tokens
    # 4 = Scooby Snacks
    # 5 = Snacks/Bosses
    # 6 = Snacks/Tokens
    # 7 = Bosses/Tokens/Snacks
    # For Non-Vanilla options, Mastermind still needs to be defeated - you just can't fight him until the goal has been met
    # Snack Clear Conditions will only work with Snacksanity Enabled
    vanilla: 50
    bosses: 0
    tokens: 0
    bosses_tokens: 0
    snacks: 0
    bosses_snacks: 0
    tokens_snacks: 0
    bosses_tokens_snacks: 0

  boss_count:
    # Sets the number of bosses needed if Boss Completion Goal is being used
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 3
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  token_count:
    # Sets the number of tokens needed if Token Completion Goal is being used
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 21
    21: 50
    random: 0
    random-low: 0
    random-high: 0

  snack_count:
    # Sets the number of tokens needed if Token Completion Goal is being used
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5287
    850: 50
    random: 0
    random-low: 0
    random-high: 0

  advanced_logic:
    # Changes generation to expect certain tricks to be performed, intended for experienced players
    'false': 50
    'true': 0

  expert_logic:
    # Changes generation to expect certain tricks to be performed, intended for even MORE experienced players
    'false': 50
    'true': 0

  creepy_early:
    # Changes generation to expect certain tricks to be performed (CREEPY EARLY [GCN]), intended for less sane players
    'false': 50
    'true': 0

  no_logic:
    # Disables all item Logic | USE AT YOUR OWN RISK
    'false': 50
    'true': 0

  speedster:
    # For Fun Setting, permanently makes scooby move at mach speed
    'false': 50
    'true': 0

  # Item & Location Options
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []
