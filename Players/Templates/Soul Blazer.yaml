# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Player{number}

# Used to describe your yaml. Useful if you have multiple files.
description: Default Soul Blazer Template

game: Soul Blazer
requires:
  version: 0.6.2 # Version of Archipelago required for this yaml to work as expected.

Soul Blazer:
  # Game Options
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # **Full:** ensure everything can be reached and acquired.
    # 
    # **Minimal:** ensure what is needed to reach your goal can be acquired.
    full: 50
    minimal: 0

  plando_items:
    # Generic items plando.
    []

  # World Options
  goal:
    # How you beat the game.
    # Deathtoll: Defeat Deathtoll.
    # Emblem Hunt: Collect all 8 master's emblems and turn them in at the Gem Fairy in Greenwood.
    deathtoll: 50
    emblem_hunt: 0

  act_progression:
    # Act/World progression.
    # Vanilla: Talk to town leaders to open the next Act/World.
    # Open: All worlds are open from the start of the game.
    vanilla: 50
    open: 0

  stones_placement:
    # Determines the placement of the 6 stones needed to enter the World of Evil.
    # Vanilla: Stones are given by the town leader of each act.
    # Bosses: Stones are rewarded from the boss lair of each act.
    # Totally Random: Stones are randomized with everything else.
    vanilla: 50
    bosses: 0
    totally_random: 0

  stones_count:
    # Number of Stones needed to open the World of Evil.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 6
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  open_deathtoll:
    # Determines if Deathtoll's Palace in the World of Evil is already open.
    'false': 50
    'true': 0

  starting_sword:
    # Determines the sword you will get in the first chest.
    # Vanilla: You will get the Sword of Life.
    # <Sword Name>: You will get that sword.
    # Randomized: You will get a random sword.
    vanilla: 50
    psycho_sword: 0
    critical_sword: 0
    lucky_blade: 0
    zantetsu_sword: 0
    spirit_sword: 0
    recovery_sword: 0
    soul_blade: 0
    randomized: 0

  magician_item:
    # Determines the item the Magician gives you at the start of the game.
    # Vanilla: The vanilla reward (Flame Ball).
    # Random Spell: A random castable magic spell.
    # Totally Random: Any reward in the item pool.
    vanilla: 0
    random_spell: 50
    totally_random: 0

  magician_soul:
    # Determines what reward you will get in place of the Magician's Soul at the start of the game.
    # Vanilla: You get the Soul of Magician.
    # Random Soul: Any progression soul. (Soul of Magician, Soul of Light, Soul of Detection)
    # Totally Random: Any reward in the item pool.
    vanilla: 50
    random_soul: 0
    totally_random: 0

  # QOL Options
  text_speed:
    # Text Speed.
    # Instant: Text renders an entire window at a time.
    # Fast: Text renders a character at a time at the same speed as the JP version.
    fast: 0
    instant: 50

  equipment_stats:
    # Determines equipment power & defense.
    # Vanilla: No change to the way Weapons/Armor work.
    # Semi-progressive: Equipment strength/defense scales with the number of swords/armors obtained.
    # Shuffle: Shuffles the stats of all swords and armor.
    vanilla: 0
    semi_progressive: 50
    shuffle: 0

  equipment_scaling:
    # Determines the stat progression for swords/armor.
    # Vanilla: Swords/Armor follow the vanilla 1/2/3/4/6/8/10/12 strength/defense progression.
    # Improved: Swords/Armor follow an improved 1/3/5/7/9/12/12/12 strength/defense progression.
    # Strong: Swords/Armor follow a strong 2/4/6/9/12/12/12/12 strength/defense progression.
    # Weak: Swords/Armor follow a weak 1/1/2/2/3/4/5/6 strength/defense progression.
    # Broken: Swords/Armor strength is set to 1/1/1/1/1/1/1/1 strength/defense progression.
    vanilla: 50
    improved: 0
    strong: 0
    weak: 0
    broken: 0

  gem_exp_pool:
    # Modifies the Gem/Exp rewards in the item pool.
    # Vanilla: The same Gem/Exp values as the vanilla game.
    # Improved: Gem rewards in the item pool are multiplied by 2, and Exp rewards by 10.
    # Random Range: Gem rewards in the pool are randomized in the range of 1-999, and Exp rewards in the range of 1-9999.
    vanilla: 0
    improved: 0
    random_range: 50

  # Enemizer
  randomize_lair_enemies:
    # Randomize enemies spawned from lairs.
    'false': 50
    'true': 0

  randomize_lair_type:
    # Randomize how lairs spawn enemies (multi-spawn, one-by-one, proximity, etc).
    'false': 50
    'true': 0

  randomize_lair_number_of_enemies:
    # Randomize number of enemies spawned from lairs.
    'false': 50
    'true': 0

  randomize_lair_spawn_rate:
    # Randomize how fast enemies are spawned from lairs.
    'false': 50
    'true': 0

  randomize_pre_spawned_enemies:
    # Randomize pre-spawned enemies which are already on the map.
    # **Not currently implemented!**
    'false': 50
    'true': 0

  # Item & Location Options
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []
