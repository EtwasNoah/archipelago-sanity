# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Player{number}

# Used to describe your yaml. Useful if you have multiple files.
description: Default Rain World Template

game: Rain World
requires:
  version: 0.6.2 # Version of Archipelago required for this yaml to work as expected.

Rain World:
  # Game Options
  plando_items:
    # Generic items plando.
    []

  # Important
  which_game_version:
    # Which Rain World version you are using.
    1_9_15b: 0
    '1_10_4': 50

  is_msc_enabled:
    # Whether More Slugcats Expansion (Downpour) is enabled, regardless of which campaign you plan to play.
    'false': 50
    'true': 0

  is_watcher_enabled:
    # Whether The Watcher is enabled, regardless of which campaign you plan to play.
    'false': 50
    'true': 0

  which_campaign:
    # Which slugcat's campaign you will play.
    monk: 0
    survivor: 50
    hunter: 0
    gourmand: 0
    artificer: 0
    rivulet: 0
    spearmaster: 0
    saint: 0
    sofanthiel: 0

  passage_progress_without_survivor:
    # How The Survivor affects earning other passages.
    # 
    # **Disabled**: Only The Martyr, The Mother, and The Pilgrim can be earned before The Survivor.
    # 
    # **Enabled**: The Dragon Slayer, The Friend, and The Wanderer can additionally be earned before The Survivor.
    # 
    # **Bypassed**: Every passage can be earned before The Survivor.
    # 
    # This will override the actual value of the corresponding setting in the Rain World Remix menu.
    disabled: 0
    enabled: 0
    bypassed: 50

  which_victory_condition:
    # Whether ascension or a gamestate-specific alternative is the victory condition.
    # The alternative victory condition depends on the selected gamestate.
    # 
    # **Vanilla**, **Hunter**, **Saint**, or **Sofanthiel**: No alternate.
    # 
    # **Monk** and **Survivor**: Reach Journey's End in Outer Expanse.
    # 
    # **Gourmand**: Receive the Mark and reach Journey's End in Outer Expanse.
    # 
    # **Artificer**: Receive the Mark and kill the Chieftain in Metropolis.
    # 
    # **Rivulet**: Receive the Rarefaction Cell and deliver it to Submerged Superstructure,
    # then meet Looks to the Moon.
    # 
    # **Spearmaster**: Receive the Mark, the SM pearl, and Moon's message,
    # then deliver it to Communications Array in Sky Islands.
    ascension: 50
    alternate: 0

  which_gate_behavior:
    # **Key only**: A key for each accessible gate is placed into the pool.
    # These keys are required to use karma gates, and karma is not.
    # 
    # **Key and Karma**: Keys are required *and* gates have karma requirements.
    # 
    # **Key or Karma**: Either keys or karma are sufficient to use a gate.
    # 
    # **Karma only**: Unrandomized behavior.  Keys are not placed into the pool.
    # 
    # Gates will have Monk-style behavior if you choose a setting other than **Key only**.
    key_only: 50
    key_and_karma: 0
    key_or_karma: 0
    karma_only: 0

  death_link:
    # When you die, everyone who enabled death link dies. Of course, the reverse is true too.
    'false': 50
    'true': 0

  random_starting_region:
    # Where Slugcat will initially spawn.
    # If not set to default, a random shelter in the region is selected.
    default_starting_point: 50
    outskirts: 0
    industrial_complex: 0
    drainage_system: 0
    garbage_wastes: 0
    shoreline: 0
    shaded_citadel: 0
    the_exterior: 0
    five_pebbles: 0
    chimney_canopy: 0
    sky_islands: 0
    farm_arrays: 0
    subterranean: 0
    pipeyard: 0
    outer_expanse: 0
    metropolis: 0
    looks_to_the_moon: 0

  # Difficulty settings
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # **Full:** ensure everything can be reached and acquired.
    # 
    # **Minimal:** ensure what is needed to reach your goal can be acquired.
    full: 50
    minimal: 0

  difficulty_monk:
    # The number of different types of non-meats that must be available before The Monk can be logically required.
    # Higher numbers are easier.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 4
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  difficulty_hunter:
    # The number of different types of meats that must be available before The Hunter can be logically required.
    # Higher numbers are easier.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 4
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  difficulty_outlaw:
    # The number of different types of creatures that must be available before The Outlaw can be logically required.
    # Higher numbers are easier.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 8
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  difficulty_nomad:
    # The number of regions that must be accessible before The Nomad can be logically required.
    # Higher numbers are easier.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 3
    # Maximum value is 8
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  difficulty_chieftain:
    # Whether a Scavenger toll must be accessible before The Chieftain can be logically required.
    # If disabled, Chieftain becomes accessible whenever any Scavengers are accessible.
    'false': 0
    'true': 50

  difficulty_glow:
    # Whether the neuron glow is logically required for Shaded Citadel,
    # parts of lower Pipeyard, and Filtration System.
    'false': 0
    'true': 50

  difficulty_extreme_threats:
    # Whether eliminating an extreme threat could be required (such as for a food quest check).
    # This includes Daddy Long Legs (and variants), Red Lizards, King Vultures, Miros Vultures,
    # Miros Birds, Aquapedes, and Red Centipedes.
    'false': 50
    'true': 0

  difficulty_submerged:
    # Whether Submerged Superstructure is logically locked behind advancing the story state for Rivulet.
    # Advancing the story state - normally done by removing the rarefaction cell from The Rot -
    # causes the cycle duration to increase significantly, making Submerged Superstructure significantly easier.
    # 
    # This setting only impacts Rivulet.
    'false': 0
    'true': 50

  difficulty_echo_low_karma:
    # How echo apperances work below 5 max karma.
    # Does not affect the echoes in Subterranean and The Exterior, which can always be visited.
    # 
    # **Unaltered**: Vanilla behavior.  Artificer needs a karma flower and other slugcats do not.
    # 
    # **Never**: Echoes cannot appear below 5 karma.
    # 
    # **With Karma Flower**: Echoes may appear below 5 karma
    # if karma flower reinforcement is active and current karma equals max karma.
    # This is the normal behavior for Artificer.
    # 
    # **Without Karma Flower**: Echoes may appear if current karma equals max karma.
    never: 0
    with_karma_flower: 0
    without_karma_flower: 0
    unaltered: 50

  # Check pool settings
  checks_foodquest:
    # Which slugcats the food quest should be available to.  Requires MSC.
    all_slugcats: 50
    only_gourmand: 0
    'off': 0

  checks_foodquest_expanded:
    # Whether the food quest should be expanded to include most creatures.
    # Specific food quest checks may be disabled by excluding the locations,
    # and some slugcats will not be required to kill and eat extreme threats if that setting is enabled.
    # Requires MSC.
    'false': 0
    'true': 50

  passage_priority:
    # Number of Passages that are randomly marked as priority checks,
    # increasing the chance that they will contain progression items.
    # These are in addition to any manually-prioiritized Passages,
    # and will not override any manually-excluded Passages.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 14
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  checks_devtokens:
    # Whether dev commentary tokens should be checks.  Requires MSC.
    'false': 50
    'true': 0

  checks_sheltersanity:
    # Whether each shelter is a check.
    'false': 50
    'true': 0

  checks_submerged:
    # Whether Submerged Superstructure has any checks.
    all_slugcats: 0
    only_rivulet: 50
    'off': 0

  checks_flowersanity:
    # Whether each static karma flower spawn is a check.
    'false': 50
    'true': 0

  # Item pool settings
  extra_karma_cap_increases:
    # Number of extra karma cap increases in the pool beyond the minimum required for ascension.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 30
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  pct_traps:
    # The percentage of filler items that will be traps.  Set to 0 to remove traps entirely.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  weight_jitter:
    # Each non-zero filler weight receives a random number, up to this jitter value, added to it.
    # The lower the setting, the less likely it is that items with small weights appear in the pool at all.
    # The higher the setting, the lower the influence of the item weights altogether.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  # Filler item relative weights
  wt_rocks:
    # The relative weight of rocks in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_spears:
    # The relative weight of spears in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    40: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_explosive_spears:
    # The relative weight of explosive spears in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_grenades:
    # The relative weight of grenades in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_flashbangs:
    # The relative weight of flashbangs in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_sporepuffs:
    # The relative weight of spore puffs in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_cherrybombs:
    # The relative weight of cherrybombs in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_lanterns:
    # The relative weight of lanterns in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_vulture_masks:
    # The relative weight of vulture masks in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    9: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_fruit:
    # The relative weight of blue fruit in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    60: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_bubblefruit:
    # The relative weight of bubble fruit in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    40: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_eggbugeggs:
    # The relative weight of eggbug eggs in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_jellyfish:
    # The relative weight of jellyfish in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_mushrooms:
    # The relative weight of mushrooms in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_slimemold:
    # The relative weight of slime mold in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    35: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_karma_flowers:
    # The relative weight of karma flowers in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_lilypucks:
    # The relative weight of lilypucks in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_electric_spears:
    # The relative weight of electric spears in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_singularity_bombs:
    # The relative weight of singularity bombs in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_joke_rifles:
    # The relative weight of joke rifles in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_fireeggs:
    # The relative weight of firebug eggs in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_glowweed:
    # The relative weight of glow weed in the non-trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  # Trap relative weights
  wt_stuns:
    # The relative weight of stun traps in the trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    60: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_zoomies:
    # The relative weight of zoomies traps in the trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_timers:
    # The relative weight of timer traps in the trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_alarms:
    # The relative weight of alarm traps in the trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_gravity:
    # The relative *weight* of gravity traps in the trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_rains:
    # The relative weight of rain traps in the trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_redlizard:
    # The relative weight of red lizard traps in the trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_redcentipede:
    # The relative weight of red centipede traps in the trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_spitterspider:
    # The relative weight of spitter spider traps in the trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_brotherlonglegs:
    # The relative weight of brother long legs traps in the trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  wt_daddylonglegs:
    # The relative weight of daddy long legs traps in the trap filler item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  # Item & Location Options
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []
