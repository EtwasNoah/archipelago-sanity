# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Player{number}

# Used to describe your yaml. Useful if you have multiple files.
description: Default Saving Princess Template

game: Saving Princess
requires:
  version: 0.6.2 # Version of Archipelago required for this yaml to work as expected.

Saving Princess:
  # Game Options
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # **Full:** ensure everything can be reached and acquired.
    # 
    # **Minimal:** ensure what is needed to reach your goal can be acquired.
    full: 50
    minimal: 0

  plando_items:
    # Generic items plando.
    []

  # Generation Options
  expanded_pool:
    # Determines if places other than chests and special weapons will be locations.
    # This includes boss fights as well as powering the tesla orb and completing the console login.
    # In Expanded Pool, system power is instead restored when receiving the System Power item.
    # Similarly, the final area door will open once the four Key items, one for each main area, have been found.
    'false': 0
    'true': 50

  trap_chance:
    # Likelihood of a filler item becoming a trap.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  # Gameplay Options
  death_link:
    # When you die, everyone who enabled death link dies. Of course, the reverse is true too.
    'false': 50
    'true': 0

  instant_saving:
    # When enabled, save points activate with no delay when touched.
    # This makes saving much faster, at the cost of being unable to pick and choose when to save in order to save warp.
    'false': 0
    'true': 50

  sprint_availability:
    # Determines under which conditions the debug sprint is made accessible to the player.
    # To sprint, hold down Ctrl if playing on keyboard, or Left Bumper if on gamepad (remappable).
    # With Jacket: you will not be able to sprint until after the Jacket item has been found.
    never_available: 0
    always_available: 0
    available_with_jacket: 50

  cliff_weapon_upgrade:
    # Determines which weapon Cliff uses against you, base or upgraded.
    # This does not change the available strategies all that much.
    # Vanilla: Cliff adds fire to his grenades if Ace has been defeated.
    # If playing with the expanded pool, the Arctic Key will trigger the change instead.
    never_upgraded: 0
    always_upgraded: 50
    vanilla: 0

  ace_weapon_upgrade:
    # Determines which weapon Ace uses against you, base or upgraded.
    # Ace with his base weapon is very hard to dodge, the upgraded weapon offers a more balanced experience.
    # Vanilla: Ace uses ice attacks if Cliff has been defeated.
    # If playing with the expanded pool, the Volcanic Key will trigger the change instead.
    never_upgraded: 0
    always_upgraded: 50
    vanilla: 0

  iframes_duration:
    # Percentage multiplier for Portia's invincibility frames.
    # 0% means you will have no invincibility frames.
    # 100% means invincibility frames will be the same as vanilla.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 400
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  # Aesthetic Options
  shake_intensity:
    # Percentage multiplier for screen shake effects.
    # 0% means the screen will not shake at all.
    # 100% means the screen shake will be the same as in vanilla.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  music_shuffle:
    # Enables music shuffling.
    # The title screen song is not shuffled, as it plays before the client connects.
    'false': 50
    'true': 0

  # Item & Location Options
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # 
    # The game decides what the replacement items will be.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []
