# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Player{number}

# Used to describe your yaml. Useful if you have multiple files.
description: Default Iji Template

game: Iji
requires:
  version: 0.6.2 # Version of Archipelago required for this yaml to work as expected.

Iji:
  # Game Options
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # **Full:** ensure everything can be reached and acquired.
    # 
    # **Minimal:** ensure what is needed to reach your goal can be acquired.
    full: 50
    minimal: 0

  plando_items:
    # Generic items plando.
    []

  EndGoal:
    # Sector X: Reach the end of Sector X and defeat General Tor.
    # 
    # Sector Z: Enter and complete Sector Z.
    # The requirements to enter Sector Z can be adjusted via the settings below.
    # 
    # Sector Y: Obtain the Null Driver from Sector Z, defeat General Tor with it, then reach the end of Sector Y.
    # The requirements to enter Sector Z, and to obtain the Null Driver, can be adjusted via the settings below.
    sector_x: 50
    sector_z: 0
    sector_y: 0

  SectorZPosterLocationsRequired:
    # If Sector Z locations are not included in your world, this option does nothing, and Sector Z will also be inaccessible.
    # How many Poster locations you need to reach to enter the Sector Z portal.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  SectorZRibbonItemsRequired:
    # If Sector Z locations are not included in your world, this option does nothing, and Ribbon items will not be shuffled into the item pool.
    # How many Ribbon items are required to enter the Sector Z portal.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  NullDriverPosterLocationsRequired:
    # If Sector Z locations are not included in your world, this option does nothing.
    # How many Poster locations you need to reach to enter the portal leading to the Null Driver.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  NullDriverRibbonItemsRequired:
    # If Sector Z locations are not included in your world, this options does nothing.
    # How many Ribbon locations you need to enter the portal leading to the Null Driver.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  RibbonItemCount:
    # If Sector Z locations are not included in your world, this option does nothing.
    # How many total Ribbon items to shuffle into the item pool. If the number of Ribbons added is fewer than the number required
    # to access Sector Z or the Null Driver, extra Ribbons will be added to meet the minimum.
    # If Sector Z or the Null Driver require no ribbons to enter, no Ribbon items will be added to the pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 20
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  PostGameLocations:
    # Whether to include Sector Z and/or Sector Y locations to the pool.
    # (Contains Posters, Logbooks, and the Null Driver)
    # Intended for worlds that do not release on completion,
    # or if Sector Z can be accessed earlier than Sector X
    # 
    # None: Do not add post game locations to the pool.
    # 
    # Sector Z: Adds Sector Z locations to the pool. 
    # If your goal is to complete Sector Z or Sector Y, this option does nothing.
    # 
    # Sector Y: Adds Sector Y locations to the pool.
    # If your goal is to complete Sector Y, this option does nothing.
    none: 50
    sector_z: 0
    sector_y: 0

  RibbonLocations:
    # If enabled, Finding ribbons sends checks.
    'false': 0
    'true': 50

  PosterLocations:
    # If enabled, Finding posters sends checks.
    'false': 0
    'true': 50

  SuperchargeLocations:
    # If enabled, Finding supercharges sends checks.
    'false': 50
    'true': 0

  BasicWeaponLocations:
    # Determines if collecting Basic Nanoweapons send checks.
    # Off: Basic Nanoweapons are not locations.
    # 
    # First Time: Assimilating a basic Nanoweapon sends a check, one per type of weapon.
    # 
    # First Per Sector: Assimilating a basic Nanoweapon sends a check, one per type of weapon per Sector.
    # 
    # All Instances: All instances of basic Nanoweapons in the game send checks
    'off': 0
    first_time: 50
    first_per_sector: 0
    all_instances: 0

  CombinedWeaponLocations:
    # If enabled, combining two Nanoweapons together sends a check, one per combination.
    'false': 0
    'true': 50

  UniqueWeaponLocations:
    # If enabled, obtaining special Nanoweapons sends checks.
    # Includes Banana Gun, Massacre, and Null Driver.
    # Null Driver will not be a location if Sector Z locations are not included in the world.
    'false': 50
    'true': 0

  UpgradeLocations:
    # If enabled, obtaining Jump and Armor Upgrades sends checks
    'false': 0
    'true': 50

  LogbookLocations:
    # If enabled, each logbook in the game is a check
    'false': 50
    'true': 0

  PacifistLocations:
    # If disabled, locations that require the player to be pacifist to some extent will not be added.
    # This includes the Deep Sector Logbooks and Supercharge in Sector 9, and the Massacre in Sector X.
    'false': 50
    'true': 0

  SectorAccessItems:
    # How many Sector Access items to add to the item pool.
    # 9 of them are required to beat the game, and obtaining any more than that has no effect
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 9
    # Maximum value is 15
    9: 50
    random: 0
    random-low: 0
    random-high: 0

  HealthItems:
    # How many Health Stat items to add to the item pool.
    # Obtaining more than 9 has no effect.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 9
    # Maximum value is 15
    9: 50
    random: 0
    random-low: 0
    random-high: 0

  AttackItems:
    # How many Attack Stat items to add to the item pool.
    # Obtaining more than 9 has no effect.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 9
    # Maximum value is 15
    9: 50
    random: 0
    random-low: 0
    random-high: 0

  AssimilateItems:
    # How many Assimilate Stat items to add to the item pool.
    # Obtaining more than 9 has no effect.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 9
    # Maximum value is 15
    9: 50
    random: 0
    random-low: 0
    random-high: 0

  StrengthItems:
    # How many Strength Stat items to add to the item pool.
    # Obtaining more than 9 has no effect.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 9
    # Maximum value is 15
    9: 50
    random: 0
    random-low: 0
    random-high: 0

  CrackItems:
    # How many Crack Stat items to add to the item pool.
    # Obtaining more than 9 has no effect.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 9
    # Maximum value is 15
    9: 50
    random: 0
    random-low: 0
    random-high: 0

  TasenItems:
    # How many Tasen Stat items to add to the item pool.
    # Obtaining more than 9 has no effect.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 9
    # Maximum value is 15
    9: 50
    random: 0
    random-low: 0
    random-high: 0

  KomatoItems:
    # How many Komato Stat items to add to the item pool.
    # Obtaining more than 9 has no effect.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 9
    # Maximum value is 15
    9: 50
    random: 0
    random-low: 0
    random-high: 0

  CompactStatItems:
    # Determines how many levels each Stat item should raise its respective level cap by.
    # Higher values will reduce the number of Stat items shuffled into the pool to keep the total value of stats, rounded up
    # i.e. if there would be 15 Health Stat items to start, and they are compacted to give 4 each,
    # There will be 4 Health Stat items shuffled into the final pool, for a total of 16 levels
    # Useful for worlds that want to have fewer location counts.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 9
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  SpecialTraitItems:
    # If enabled, the Special Trait items will be shuffled into the item pool.
    'false': 50
    'true': 0

  ExtraSupercharges:
    # Adds extra Supercharge items to the pool that each grant 1 Stat point at the start of each Sector.
    # (If Supercharge Points are shuffled in the above option, this option stacks on top of it.)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  TrapPercentage:
    # What percentage of filler items should be replaced by traps
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  RocketTrapWeight:
    # How weighted Rocket to the Face traps are to be chosen, if traps are shuffled.
    # Spawns a rocket that flies towards Iji's face.
    # 0 Disables Rocket to the Face traps.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  BlitsTrapWeight:
    # How weighted Blits traps are to be chosen, if traps are shuffled.
    # Spawns a Blits nest under Iji's feet that spawns a few Blits enemies.
    # 0 Disables Blits traps.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  NullDriveTrapWeight:
    # How weighted Null Drive traps are to be chosen, if traps are shuffled.
    # Randomly shuffles some of the background/tileset images until the game is closed.
    # 0 Disables Null Drive traps
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  NullDriveFactor:
    # How severe the effect of Null Drive traps are.
    # The higher the value, the more backgrounds/tileset images get reassigned.
    # 50 is the severity used by the vanilla Null Driver
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    25: 50
    random: 0
    random-low: 0
    random-high: 0

  TurboTrapWeight:
    # How weighted Turbo traps are to be chosen, if traps are shuffled.
    # Doubles the game speed for 20 seconds.
    # 0 Disables Turbo traps
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  NapTrapWeight:
    # How weighted Nap traps are to be chosen, if traps are shuffled.
    # Knocks Iji down, and prevents her from getting up for 5 seconds.
    # 0 Disables Nap traps
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  ClownShoesWeight:
    # How weighted Clown Shoe traps are to be chosen, if traps are shuffled.
    # Iji's footsteps make squeaky noises for 1 minute.
    # 0 Disables Clown Shoe traps
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  HealthBalancing:
    # If enabled, Sectors will logically require Health Stat items.
    # This should force Health Stat items to be forced into earlier spheres.
    # Each Sector beyond Sector 1 requires 1 more Health item than the previous,
    # up to Sector X logically requiring 9 Health Stat items
    'false': 0
    'true': 50

  SuperchargePointHandling:
    # Off: Supercharges behave normally, only granting 1 Stat point for the current Sector when collected.
    # 
    # Progressive: Supercharges grant 1 Stat point when collected,
    # and also grant 1 Stat point at the start of each Sector that comes after the Sector it was collected in.
    # 
    # Shuffled: Supercharges no longer grant Stat points when collected.
    # Instead, 10 Supercharge items are shuffled into the item pool that each grant 1 Stat point at the start of each Sector.
    'off': 0
    progressive: 50
    shuffled: 0

  IjiDeathLink:
    # When you die, everyone dies. The reverse is also true.
    # 
    # If DeathLinkDamage is set below 20, you will instead take damage when sent a death
    'false': 50
    'true': 0

  DeathLinkDamage:
    # How much HP damage you take when receiving a death from another player.
    # If set to 20, receiving a death instantly kills you instead.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 20
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  LogicDifficulty:
    # Normal Logic: Expects the player to reach locations in the normal, dev-intended ways
    # 
    # Obscure Logic: Expects the player to reach locations that are technically possible to reach, albeit in obscure or unintended ways.
    # Note: I haven't (yet) documented any of these logic skips, so choose this at your own risk
    # 
    # Extreme Logic: The cursed option. Includes obscure logic skips plus a few other terrible ones.
    normal_logic: 50
    obscure_logic: 0
    extreme_logic: 0

  # Item & Location Options
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []
